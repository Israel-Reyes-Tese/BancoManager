class Ingreso(TimestampedModel):
    TIPOS_INGRESO = [
        ('sueldo', 'Sueldo'),
        ('regalo', 'Regalo'),
        ('inversion', 'Inversión'),
    ]
    cantidad = models.DecimalField(max_digits=10, decimal_places=2, validators=[validate_positive])
    descripcion = models.CharField(max_length=255, blank=True, null=True) 
    fecha = models.DateField() 
    fuente = models.CharField(max_length=100) 
    cuenta = models.ForeignKey(CuentaBancaria, on_delete=models.CASCADE, related_name='ingresos') 
    usuario = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='ingresos') 
    tipo = models.CharField(max_length=20, choices=TIPOS_INGRESO, default='sueldo') 
    fechaIngreso = models.DateTimeField(auto_now_add=True)


class Ingreso(TimestampedModel):
    TIPOS_INGRESO = [
        ('sueldo', 'Sueldo'),
        ('regalo', 'Regalo'),
        ('inversion', 'Inversión'),
    ]
    cantidad = models.DecimalField(max_digits=10, decimal_places=2, validators=[validate_positive])
    descripcion = models.CharField(max_length=255, blank=True, null=True) 
    fecha = models.DateField() 
    fuente = models.CharField(max_length=100) 
    cuenta = models.ForeignKey(CuentaBancaria, on_delete=models.CASCADE, related_name='ingresos') 
    usuario = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='ingresos') 
    tipo = models.CharField(max_length=20, choices=TIPOS_INGRESO, default='sueldo') 
    fechaIngreso = models.DateTimeField(auto_now_add=True)


class CuentaBancaria(TimestampedModel):
    TIPO_CUENTA = (
        ('credito', 'Crédito'),
        ('debito', 'Débito'),
    )
    
    TIPO_AFILIACION = (
        ('visa', 'Visa'),
        ('mastercard', 'MasterCard'),
        ('american_express', 'American Express'),
        ('discover', 'Discover'),
        ('otra', 'Otra'),
    )
    
    nombre = models.CharField(max_length=100)
    numeroCuenta = models.CharField(max_length=20, unique=True)
    tipoCuenta = models.CharField(max_length=10, choices=TIPO_CUENTA)
    afiliacion = models.CharField(max_length=20, choices=TIPO_AFILIACION, default='otra')
    colorIdentificacion = models.CharField(max_length=20)
    saldoInicial = models.DecimalField(max_digits=10, decimal_places=2, default=0, validators=[MinValueValidator(0)])
    saldoActual = models.DecimalField(max_digits=10, decimal_places=2, default=0, validators=[MinValueValidator(0)])
    banco = models.ForeignKey(Banco, on_delete=models.CASCADE, related_name='cuentas')
    usuario = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='cuentas_bancarias')
    cvc = models.CharField(max_length=3, validators=[RegexValidator(r'^\d{3}$', 'El CVC debe ser un número de 3 dígitos.')], blank=True, null=True, default='000')
    fechaVencimiento = models.DateField(blank=True, null=True)
    fechaIngreso = models.DateTimeField(auto_now_add=True)

class TarjetaCredito(TimestampedModel):
    numero_tarjeta = models.CharField(max_length=16, unique=True, validators=[RegexValidator(r'^\d{16}$', 'El número de tarjeta debe contener 16 dígitos.')])
    nombre_titular = models.CharField(max_length=100)
    fecha_vencimiento = models.DateField()
    colorIdentificacion = models.CharField(max_length=20)
    limite = models.DecimalField(max_digits=10, decimal_places=2, validators=[MinValueValidator(0)])
    usuario = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='tarjetas_credito')


class Prestamo(TimestampedModel):
    descripcion = models.CharField(max_length=255, blank=True, null=True)
    monto_total = models.DecimalField(max_digits=10, decimal_places=2, validators=[MinValueValidator(0)])
    tasa_interes = models.DecimalField(max_digits=5, decimal_places=2, validators=[MinValueValidator(0)])
    fecha_inicio = models.DateField()
    usuario_prestamista = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='prestamos')
    estado = models.BooleanField(default=False)

class Deuda(TimestampedModel):
    DEUDA_TIPO_CHOICES = (
        ('usuario', 'Usuario'),
        ('tarjeta', 'Tarjeta de Crédito'),
        ('prestamo', 'Préstamo'),
    )
    
    usuario_deudor = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='deudas_deudor')
    monto = models.DecimalField(max_digits=10, decimal_places=2, validators=[MinValueValidator(0)])
    tipo_deuda = models.CharField(max_length=20, choices=DEUDA_TIPO_CHOICES)
    estado = models.BooleanField(default=False)
    descripcion = models.CharField(max_length=255, blank=True, null=True)
    tarjeta = models.ForeignKey(CuentaBancaria, on_delete=models.SET_NULL, null=True, blank=True)
    prestamo = models.ForeignKey(Prestamo, on_delete=models.SET_NULL, null=True, blank=True)
    fecha_creacion = models.DateField(auto_now_add=True)
    fecha_vencimiento = models.DateField()


Consideraciones Generales
Clases Base Abstractas: Todos los modelos heredan de TimestampedModel, que incluye las fechas de creación y actualización.
Relaciones: Los modelos incluyen múltiples relaciones con claves foráneas, permitiendo la asociación entre usuarios, cuentas, préstamos, tarjetas y deudas.
Validaciones: Se han implementado validaciones en los campos necesarios para asegurar la integridad de los datos.
Con este resumen, puedes tener una comprensión general de los modelos y sus componentes, lo cual es útil para definir cualquier prompt o pregunta relacionada con el desarrollo y diseño de la aplicación en Django.




